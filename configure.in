AC_INIT(folly, m4_esyscmd([cat VERSION | tr -d '\n']))
AC_CANONICAL_TARGET

AM_INIT_AUTOMAKE

AM_CONFIG_HEADER([config.h])

AC_PROG_LIBTOOL
AM_PROG_CC_C_O

AC_CONFIG_FILES([Makefile
                 app/nully/Makefile
                 include/Makefile
                 lib/Makefile
                 folly.pc])

AC_CHECK_HEADER(sys/queue.h,
                [AC_DEFINE(HAVE_SYS_QUEUE_H, 1, [Define to 1 if you have <sys/queue.h>.])])

AC_ARG_ENABLE(diag,
              [  --disable-diag  Disable diagnostic messages ])
AC_ARG_ENABLE(mark_folly,
              [  --enable-mark_folly  Mark fnodes in order to detect memory corruption ])

AC_ARG_WITH(pkgconfigdir,
            [  --with-pkgconfigdir=DIR      pkgconfig file in DIR @<:@LIBDIR/pkgconfig@:>@],
            [pkgconfigdir=$withval],
            [pkgconfigdir='${libdir}/pkgconfig'])
AC_SUBST(pkgconfigdir)

case $target_os in
    *linux*) os=linux;;
esac

if ! test "$enable_diag" = "no"; then
    AC_DEFINE(_DIAG, 1, [Enable diagnostic messages])
fi

if test "$enable_mark_folly" = "yes"; then
    AC_DEFINE(MARK_FOLLY, 1, [Enable fnode marking])
fi

AM_CONDITIONAL(HAVE_SYS_QUEUE_H, test "$HAVE_SYS_QUEUE_H" = "1")
AM_CONDITIONAL(LINUX, test "$os" = "linux")

LIBTOOL_VERSNUM=`echo $PACKAGE_VERSION | sed 's/\./:/g'`
AC_SUBST(LIBTOOL_VERSNUM)

AC_OUTPUT
